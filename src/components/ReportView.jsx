import React, { useState } from 'react';

const ReportView = ({ reportData, groupedByClass, weekInfo, selectedWeek, setSelectedWeek, weekOptions, reportFilterLop, setReportFilterLop, LOP_LIST }) => {
  const [viewMode, setViewMode] = useState('grouped'); // 'grouped' ho·∫∑c 'all'

  // T·∫°o options cho dropdown l·ªçc l·ªõp
  const classOptions = ['T·∫•t c·∫£', ...LOP_LIST];

  // L·∫•y danh s√°ch l·ªõp theo ƒë√∫ng th·ª© t·ª± LOP_LIST
  const orderedClassNames = Object.keys(groupedByClass).sort((a, b) => {
    const indexA = LOP_LIST.indexOf(a);
    const indexB = LOP_LIST.indexOf(b);
    
    // N·∫øu c·∫£ hai ƒë·ªÅu c√≥ trong LOP_LIST, s·∫Øp x·∫øp theo th·ª© t·ª±
    if (indexA !== -1 && indexB !== -1) {
      return indexA - indexB;
    }
    
    // N·∫øu ch·ªâ a c√≥ trong LOP_LIST, a l√™n tr∆∞·ªõc
    if (indexA !== -1) return -1;
    
    // N·∫øu ch·ªâ b c√≥ trong LOP_LIST, b l√™n tr∆∞·ªõc
    if (indexB !== -1) return 1;
    
    // N·∫øu c·∫£ haiÈÉΩ‰∏çÂú® LOP_LIST‰∏≠ÔºåÊåâÂ≠óÊØçÈ°∫Â∫èÊéíÂ∫è
    return a.localeCompare(b);
  });

  return (
    <div className="view-container">
      <h2 className="title">B√°o C√°o ƒêi·ªÉm Danh Theo Tu·∫ßn</h2>
      
      {/* B·ªô l·ªçc v√† ch·ªçn tu·∫ßn */}
      <div className="form-group" style={{ 
        display: 'grid', 
        gridTemplateColumns: '1fr 1fr', 
        gap: '16px', 
        marginBottom: '20px' 
      }}>
        <div>
          <label htmlFor="week-select" className="label">Ch·ªçn Tu·∫ßn</label>
          <select 
            id="week-select" 
            value={selectedWeek} 
            onChange={(e) => setSelectedWeek(e.target.value)} 
            className="select-field"
          >
            {weekOptions.map(option => (
              <option key={option.value} value={option.value}>
                {option.label}
              </option>
            ))}
          </select>
        </div>
        
        <div>
          <label htmlFor="class-filter" className="label">L·ªçc Theo L·ªõp</label>
          <select 
            id="class-filter" 
            value={reportFilterLop} 
            onChange={(e) => setReportFilterLop(e.target.value)} 
            className="select-field"
          >
            {classOptions.map(lop => (
              <option key={lop} value={lop}>{lop}</option>
            ))}
          </select>
        </div>
      </div>

      {/* Ch·∫ø ƒë·ªô xem */}
      <div style={{ marginBottom: '20px', display: 'flex', gap: '10px' }}>
        <button
          onClick={() => setViewMode('grouped')}
          className={`nav-button ${viewMode === 'grouped' ? 'active' : ''}`}
          style={{ padding: '8px 16px', fontSize: '14px' }}
        >
          üìä Xem Theo L·ªõp
        </button>
        <button
          onClick={() => setViewMode('all')}
          className={`nav-button ${viewMode === 'all' ? 'active' : ''}`}
          style={{ padding: '8px 16px', fontSize: '14px' }}
        >
          üë• Xem T·∫•t C·∫£
        </button>
      </div>

      {weekInfo && (
        <div style={{ 
          backgroundColor: '#e8f5e8', 
          padding: '15px', 
          borderRadius: '8px', 
          marginBottom: '20px',
          border: '1px solid #c8e6c9'
        }}>
          <h3 style={{ margin: '0 0 10px 0', color: '#2e7d32' }}>
            üìÖ Tu·∫ßn t·ª´ {weekInfo.dates[0].display} ƒë·∫øn {weekInfo.dates[6].display}
          </h3>
          <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>
            {weekInfo.dates.map((day, index) => (
              <span key={index} style={{
                padding: '5px 10px',
                backgroundColor: '#fff',
                borderRadius: '15px',
                border: '1px solid #ddd',
                fontSize: '14px'
              }}>
                {day.display}
              </span>
            ))}
          </div>
        </div>
      )}

      {/* T·ªïng quan th·ªëng k√™ */}
      {reportData.length > 0 && (
        <div style={{ 
          display: 'grid', 
          gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', 
          gap: '16px', 
          marginBottom: '20px' 
        }}>
          <div style={{ 
            backgroundColor: '#e3f2fd', 
            padding: '16px', 
            borderRadius: '8px',
            textAlign: 'center'
          }}>
            <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#1976d2' }}>
              {reportData.length}
            </div>
            <div style={{ fontSize: '14px', color: '#1976d2' }}>T·ªïng S·ªë H·ªçc Sinh</div>
          </div>
          
          <div style={{ 
            backgroundColor: '#f1f8e9', 
            padding: '16px', 
            borderRadius: '8px',
            textAlign: 'center'
          }}>
            <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#388e3c' }}>
              {reportData.filter(s => s.attendanceDays > 0).length}
            </div>
            <div style={{ fontSize: '14px', color: '#388e3c' }}>H·ªçc Sinh ƒêi·ªÉm Danh</div>
          </div>
          
          <div style={{ 
            backgroundColor: '#fff3e0', 
            padding: '16px', 
            borderRadius: '8px',
            textAlign: 'center'
          }}>
            <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#f57c00' }}>
              {reportData.reduce((total, s) => total + s.attendanceDays, 0)}
            </div>
            <div style={{ fontSize: '14px', color: '#f57c00' }}>T·ªïng S·ªë Bu·ªïi ƒêi·ªÉm Danh</div>
          </div>
        </div>
      )}

      {/* Hi·ªÉn th·ªã theo ch·∫ø ƒë·ªô xem */}
      {viewMode === 'grouped' ? (
        /* Xem theo t·ª´ng l·ªõp - theo th·ª© t·ª± LOP_LIST */
        <div>
          {orderedClassNames.map((className) => (
            <div key={className} style={{ marginBottom: '30px' }}>
              <h3 style={{ 
                backgroundColor: '#5d4037', 
                color: 'white', 
                padding: '12px 16px', 
                borderRadius: '6px',
                marginBottom: '16px',
                fontSize: '18px'
              }}>
                üéì {className} ({groupedByClass[className].length} h·ªçc sinh)
              </h3>
              
              <div className="table-container">
                <table className="data-table">
                  <thead className="table-header">
                    <tr>
                      <th scope="col" className="table-cell" style={{ width: '40px' }}>#</th>
                      <th scope="col" className="table-cell">H·ªç T√™n</th>
                      <th scope="col" className="table-cell text-center">S·ªë Ng√†y ƒêi·ªÉm Danh</th>
                      <th scope="col" className="table-cell text-center">T·ªïng ƒêi·ªÉm Tu·∫ßn</th>
                      <th scope="col" className="table-cell text-center">ƒêi·ªÉm Trung B√¨nh</th>
                    </tr>
                  </thead>
                  <tbody>
                    {groupedByClass[className].map((student, index) => (
                      <tr key={index} className="table-row">
                        <td className="table-cell text-center" style={{ fontWeight: 'bold' }}>
                          {index + 1}
                        </td>
                        <td className="table-cell bold">{student.hoTen}</td>
                        <td className="table-cell text-center">{student.attendanceDays}</td>
                        <td className="table-cell text-center">{student.totalScore}</td>
                        <td className="table-cell text-center">
                          {student.attendanceDays > 0 
                            ? (student.totalScore / student.attendanceDays).toFixed(1)
                            : '0'
                          }
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            </div>
          ))}
        </div>
      ) : (
        /* Xem t·∫•t c·∫£ - s·∫Øp x·∫øp theo l·ªõp theo LOP_LIST */
        <div className="table-container">
          <table className="data-table">
            <thead className="table-header">
              <tr>
                <th scope="col" className="table-cell">L·ªõp</th>
                <th scope="col" className="table-cell">H·ªç T√™n</th>
                <th scope="col" className="table-cell text-center">S·ªë Ng√†y ƒêi·ªÉm Danh</th>
                <th scope="col" className="table-cell text-center">T·ªïng ƒêi·ªÉm Tu·∫ßn</th>
                <th scope="col" className="table-cell text-center">ƒêi·ªÉm Trung B√¨nh</th>
              </tr>
            </thead>
            <tbody>
              {reportData.length > 0 ? (
                reportData
                  .sort((a, b) => {
                    const indexA = LOP_LIST.indexOf(a.lop);
                    const indexB = LOP_LIST.indexOf(b.lop);
                    
                    // S·∫Øp x·∫øp theo th·ª© t·ª± LOP_LIST tr∆∞·ªõc
                    if (indexA !== -1 && indexB !== -1) {
                      return indexA - indexB;
                    }
                    if (indexA !== -1) return -1;
                    if (indexB !== -1) return 1;
                    
                    // Sau ƒë√≥ s·∫Øp x·∫øp theo t√™n n·∫øu c√πng l·ªõp
                    return a.lop.localeCompare(b.lop);
                  })
                  .map((student, index) => (
                    <tr key={index} className="table-row">
                      <td className="table-cell" style={{ fontWeight: 'bold', color: '#5d4037' }}>
                        {student.lop}
                      </td>
                      <td className="table-cell bold">{student.hoTen}</td>
                      <td className="table-cell text-center">{student.attendanceDays}</td>
                      <td className="table-cell text-center">{student.totalScore}</td>
                      <td className="table-cell text-center">
                        {student.attendanceDays > 0 
                          ? (student.totalScore / student.attendanceDays).toFixed(1)
                          : '0'
                        }
                      </td>
                    </tr>
                  ))
              ) : (
                <tr>
                  <td colSpan="5" className="table-cell text-center italic">
                    Kh√¥ng c√≥ d·ªØ li·ªáu ƒëi·ªÉm danh cho tu·∫ßn n√†y.
                  </td>
                </tr>
              )}
            </tbody>
          </table>
        </div>
      )}

      {/* Hi·ªÉn th·ªã chi ti·∫øt t·ª´ng ng√†y */}
      {reportData.length > 0 && viewMode === 'all' && (
        <div style={{ marginTop: '30px' }}>
          <h3 style={{ fontSize: '18px', fontWeight: '600', marginBottom: '16px', color: '#5d4037' }}>
            üìä Chi Ti·∫øt ƒêi·ªÉm T·ª´ng Ng√†y
          </h3>
          {reportData
            .sort((a, b) => {
              const indexA = LOP_LIST.indexOf(a.lop);
              const indexB = LOP_LIST.indexOf(b.lop);
              
              if (indexA !== -1 && indexB !== -1) {
                return indexA - indexB;
              }
              if (indexA !== -1) return -1;
              if (indexB !== -1) return 1;
              
              return a.lop.localeCompare(b.lop);
            })
            .map((student, index) => (
              student.attendanceDays > 0 && (
                <div key={index} style={{ marginBottom: '20px', padding: '15px', border: '1px solid #e0e0e0', borderRadius: '8px' }}>
                  <h4 style={{ marginBottom: '10px', color: '#5d4037' }}>
                    üë§ {student.hoTen} - {student.lop}
                  </h4>
                  <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', gap: '10px' }}>
                    {Object.entries(student.details || {}).map(([date, detail]) => {
                      const dayInfo = weekInfo.dates.find(d => d.date === date);
                      return (
                        <div key={date} style={{ 
                          padding: '12px', 
                          backgroundColor: '#f8f9fa', 
                          borderRadius: '6px',
                          border: '1px solid #dee2e6'
                        }}>
                          <div style={{ fontWeight: 'bold', marginBottom: '8px', color: '#495057' }}>
                            {dayInfo ? dayInfo.display : date}
                          </div>
                          <div style={{ fontSize: '14px' }}>
                            <div>‚úÖ <strong>ƒêi·ªÉm:</strong> {detail.score}</div>
                            <div>üìã <strong>Tr·∫°ng th√°i:</strong> {detail.present}</div>
                            <div>üíê <strong>B√≥ hoa Thi√™ng:</strong> {detail.holyBouquet ? 'C√≥' : 'Kh√¥ng'}</div>
                            <div>üëï <strong>ƒê·ªìng ph·ª•c:</strong> {detail.uniform ? 'C√≥' : 'Kh√¥ng'}</div>
                          </div>
                        </div>
                      );
                    })}
                  </div>
                </div>
              )
            ))}
        </div>
      )}
    </div>
  );
};

export default ReportView;